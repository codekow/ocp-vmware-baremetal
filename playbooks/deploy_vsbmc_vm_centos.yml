---
# vim: set ft=ansible:

- hosts: bastion
  gather_facts: false

  vars:
    guest_disk_size: 40
    guest_memory: 4096
    guest_vcpu: 2
    guest_id: rhel8_64Guest

  tasks:
    - name: Setup scratch path
      ansible.builtin.file:
        path: ../scratch
        state: directory
      delegate_to: localhost
      run_once: true

    - name: Check if base RHEL/CentOS 8 already disk image exists
      ansible.builtin.stat:
        path: ../scratch/baseos.qcow2
      delegate_to: localhost
      run_once: true
      register: base_result

    - name: Downloading CentOS 8 base image
      ansible.builtin.get_url:
        url: https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
        dest: ../scratch/baseos.qcow2
        mode: 0644
      delegate_to: localhost
      run_once: true
      when: not base_result.stat.exists

    - name: Convert base image to vmdk
      ansible.builtin.command: |
        qemu-img convert -O vmdk ../scratch/baseos.qcow2 ../scratch/baseos.vmdk
      delegate_to: localhost
      run_once: true

    - name: Create vsbmc VM
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_host }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: false
        name: "{{ inventory_hostname }}"
        datacenter: "{{ vcenter_datacenter }}"
        cluster: "{{ vcenter_cluster }}"
        folder: "{{ vcenter_folder }}"
        guest_id: "{{ guest_id }}"
        annotation: |

          VCenter Virtual VBMC Host

        state: present
        disk:
          - size_gb: "{{ guest_disk_size }}"
            type: thick
            datastore: "{{ vcenter_datastore }}"
        networks:
          - name: "{{ guest_network }}"
            mac: "{{ mac_address }}"
          - name: "{{ guest_network_provision | default( guest_network ) }}"
        hardware:
          nested_virt: true
          boot_firmware: efi
          memory_mb: "{{ guest_memory }}"
          num_cpus: "{{ guest_vcpu }}"
      delegate_to: localhost
      register: vm_deploy

    - debug:
        msg: "{{ vm_deploy.instance.hw_files | regex_replace('^.*] ') }}"

    - name: Copy file to datastore using delegate_to
      community.vmware.vsphere_copy:
        hostname: "{{ vcenter_host }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: false
        src: ../scratch/baseos.vmdk
        datacenter: "{{ vcenter_datacenter }}"
        datastore: "{{ vcenter_datastore }}"
        path: "{{ inventory_hostname }}/{{ inventory_hostname }}.vmdk"
      delegate_to: localhost
      when: false
